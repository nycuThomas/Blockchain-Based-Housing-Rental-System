# mongodb
docker run --name mongodb -d -p 27017:27017 mongo:4.4.29

# DID Chain
1. docker run --name DID --detach --publish 8545:8545 trufflesuite/ganache-cli:latest --seed 0 --gasPrice 0
2. complie IdentityManager.sol
3. 0xe092b1fa25DF5786D151246E492Eed3d15EA4dAA deploy IdentityManager.sol
4. copy IdentityManager_metadata.json to contract/identityChain/IdentityManager.json

you can change the deploy account in server_config.json

Available Accounts
==================
(0) 0xe092b1fa25DF5786D151246E492Eed3d15EA4dAA (100 ETH)    DID chain
(1) 0xc0d8F541Ab8B71F20c10261818F2F401e8194049 (100 ETH)    admin
(2) 0xf1F8Ef6b4D4Ba31079E2263eC85c03fD5a0802bF (100 ETH)    
(3) 0xc91579bB7972f76D595f8665BffaF92874C8084C (100 ETH)
(4) 0x6F03947036cba3279b07Cd6ea5Ca674cA51E52ba (100 ETH)    test A
(5) 0x889735777f51c84272a7FEb0d763280179A529a9 (100 ETH)    test B
(6) 0x2C46BcB6dA3ae85dA881edeEd4eC2fE92670f90F (100 ETH)    test C
(7) 0x6a71E87487C0eC01EcFFd09a2042Cb5eD507393E (100 ETH)    
(8) 0x3E014E5c311a7D6F652CA4F8bb016f4338A44118 (100 ETH)    
(9) 0x75c4Fb2e81a6d3420125F5145182F528d1699146 (100 ETH)    

Lower Case
(0) 0xe092b1fa25df5786d151246e492eed3d15ea4daa
(4) 0x6f03947036cba3279b07cd6ea5ca674ca51e52ba
(5) 0x889735777f51c84272a7feb0d763280179a529a9
(6) 0x2c46bcb6da3ae85da881edeed4ec2fe92670f90f

Private Keys
==================
(0) 0x0cc0c2de7e8c30525b4ca3b9e0b9703fb29569060d403261055481df7014f7fa
(1) 0xb97de1848f97378ee439b37e776ffe11a2fff415b2f93dc240b2d16e9c184ba9
(2) 0x42f3b9b31fcaaa03ca71cab7d194979d0d1bedf16f8f4e9414f0ed4df699dd10
(3) 0x41219e3efe938f4b1b5bd68389705be763821460b940d5e2bd221f66f40028d3
(4) 0x64530eda5f401cc2e9bba4e7b2e0ba9b1bb9d95c344bf8643776b57bb6eb9845
(5) 0x76db32cb46895cdb4473c86b4468dbd45f46c1b3d7972002c72bea74efff18ef
(6) 0x3b747127e9ea07790d0fe9b8e5b6508953740d6cf0269d3145cdf1b69c22f2bb
(7) 0xc01836866febf10022ec9ae632677937f3070d4ed4819e5c6e03d3e8ec02dc2e
(8) 0xdf207d299d941818bb4f7822cf003662370a7d685016dfc3f1e2cac03d47fc1d
(9) 0x2d9d98ee99c8f7c664125ff2b3b91f356e880917b2d9fc508ffe1b647bd7a9fd


# Rental House Chain
使用fablo 1.2.0建置
https://github.com/hyperledger-labs/fablo/tree/1.2.0

1. 於/fablo目錄中,執行./fablo up
2. 複製connection-profile(connection-profile-org1.json 4個json檔)到config目錄中

在搬運後,可能會有無法編譯的bug,以下方法可能可以解決:
1. 在一個只有fablo file的目錄,執行./fablo init node
2. 將產生的fablo-config.json及chaincode內的index.js替代

# Start the System
1. setup DID chain
2. complie and deploy IdentityManager.sol
3. setup Rental House Chain
4. install nodemon
5. npm install
6. npm start

# DID chain flow
1. Legal person register, audit and then bind account
2. User register and audit
3. User bind account and wait contract address appear
4. encrypt csr and pem, and then upload

# note
1. 注意DID json file的格式(abi -> output.abi in Solidity compiler ver 8.19)
2. 註冊用的csr,其中CN(Common Name)的項目需與identity(metamask address)相同

# offline sign bug
原本用於智能合約中function的身分限制方法無法使用
result: "Cannot read properties of undefined (reading 'clientIdentity')" -> getIdentity() { ctx.clientIdentity }

# Test System Environment
OS:     Ubuntu2204
node:   v16.20.1
npm:    8.19.4

docker: 24.0.5
docker-compose:  1.29.2

Solidity compiler:  0.8.19+commit(using remix)
fablo:  1.2.0
<%- include('../partials/header'); %>

    <body>
        <div class="container mt-3">
            <div class="col-md-5 center-block" style="float: none; margin: auto">
                <div style="margin-top: 10px">
                    <a href="/leaseSystem/profile/">back</a>
                </div>
            </div>
        </div>


        <div class="container mt-3">
            <div class="col-md-5 center-block" style="float: none; margin: auto">
                <div style="margin-top: 10px" class="card text-center">
                    <div class="card-header">
                        <h4 style="margin:auto" class="font-weight-bold">Your Data</h4>
                    </div>
                    <form action="/leaseSystem/dataSharing/saveData" method="post">
                        <div class="input-group mt-3 mb-3">
                            <span class="input-group-text">Your Address</span>
                            <input type="text" class="form-control" id="tenantAddress" name="tenantAddress"
                                value="<%=address%>" readonly>
                        </div>
                        <div class="input-group mb-3">
                            <span class="input-group-text">Your Pubkey</span>
                            <input type="text" class="form-control" id="tenantPubkey" name="tenantPubkey"
                                value="<%=pubkey%>" readonly>
                        </div>
                        <div class="input-group mb-3">
                            <span class="input-group-text">job</span>
                            <input type="text" class="form-control" id="jobInput" name="jobInput"
                                value="<%=tenantData.job%>">
                        </div>
                        <div class="input-group mb-3">
                            <span class="input-group-text">salary</span>
                            <input type="number" class="form-control" id="salaryInput" name="salaryInput"
                                value="<%=tenantData.salary%>">
                        </div>
                        <div class="input-group mb-3">
                            <span class="input-group-text">deposit</span>
                            <input type="number" class="form-control" id="depositInput" name="depositInput"
                                value="<%=tenantData.deposit%>">
                        </div>
                        <div class="mb-3">
                            <input type="submit" class="btn btn-primary" value="save data" id="save">
                        </div>
                    </form>

                </div>
            </div>
        </div>

        <div class="container mt-3">
            <div class="col-md-5 center-block" style="float: none; margin: auto">
                <div style="margin-top: 10px" class="card ">
                    <div class="card-header text-center">
                        <h4 style="margin:auto" class="font-weight-bold">Access Control</h4>
                    </div>
                    <div class="form-check mt-3 ms-2">
                        <input class="form-check-input" type="checkbox" value="job" id="job">
                        <label class="form-check-label" for="job">
                            job
                        </label>
                    </div>
                    <div class=" form-check mt-3 ms-2">
                        <input class="form-check-input" type="checkbox" value="salary" id="salary">
                        <label class="form-check-label" for="salary">
                            salary
                        </label>
                    </div>
                    <div class=" form-check mt-3 ms-2">
                        <input class="form-check-input" type="checkbox" value="deposit" id="deposit">
                        <label class="form-check-label" for="deposit">
                            deposit
                        </label>
                    </div>

                    <div class="text-center mt-3">
                        <input type="button" class="btn btn-primary" value="send access result" id="send">
                    </div>
                    <!-- </form> -->
                </div>
            </div>
        </div>

    </body>
    <script>
        var identityManagerABI, personalIdentityABI;
        var account;
        var contract_address = '<%= contract_address %>';
        var address = '<%= address %>';
        var pubkey = '<%= pubkey %>';

        Date.prototype.addDays = function (days) {
            this.setDate(this.getDate() + days);
            return this;
        }

        const preventMalleability = (sig, ecdsa) => {
            const halfOrder = ecdsa.n.shrn(1);
            if (sig.s.cmp(halfOrder) === 1) {
                const bigNum = ecdsa.n;
                sig.s = bigNum.sub(sig.s);
            }
            return sig;
        };

        function sign(privateKey, digest) {
            const signKey = ecdsa.keyFromPrivate(privateKey, 'hex');
            const sig = ecdsa.sign(Buffer.from(digest, 'hex'), signKey);
            var halfOrderSig = preventMalleability(sig, ecdsa);
            const signature = Buffer.from(halfOrderSig.toDER());
            var signature_string = '';
            for (var i = 0; i < signature.length; i++) {
                signature_string += signature[i].toString();
                signature_string += '/';
            }
            signature_string = signature_string.slice(0, -1);
            return signature_string;
        }

        function ajaxAwait(url, data) {
            return new Promise((resolve, reject) => {
                $.ajax({
                    type: 'POST',
                    url: url,
                    dataType: 'json',
                    data: data,
                    success: function (res) {
                        console.log('success');
                        resolve(res);
                    },
                    fail: function (xhr, ajaxOptions, thrownError) {
                        console.log('fail');
                        reject(false);
                    },
                });
            });
        }

        async function buildListener() {
            var identityManagerInstance = new web3.eth.Contract(
                identityManagerABI,
                contract_address
            );
            var personalIdentityAddress = await identityManagerInstance.methods
                .getAccessManagerAddress(account)
                .call({ from: account });

            var personalIdentityInstance = new web3.eth.Contract(
                personalIdentityABI,
                personalIdentityAddress
            );
            $('#send').on('click', async function (e) {
                let job = $("#job").is(":checked");
                let salary = $("#salary").is(":checked");
                let deposit = $("#deposit").is(":checked");
                let endTime = new Date();

                let response, result;
                response = await ajaxAwait(
                    '/leaseSystem/updatePermission',
                    {
                        job: job,
                        salary: salary,
                        deposit: deposit,
                        endTime: endTime.addDays(7)
                    }
                );
                console.log('response = ' + response.result);
                // alert(response.result)
                if (response.error) {
                    return alert(`error :${response.result}`);
                }
                let encryptKey = await personalIdentityInstance.methods
                    .getEncryptMaterial('HLFPrivateKey')
                    .call({ from: account });
                let privateKey = await ethereum.request({
                    method: 'eth_decrypt',
                    params: [encryptKey, account],
                });
                let signature_string;
                signature_string = sign(privateKey, response.digest);
                response = await ajaxAwait(
                    '/leaseSystem/proposalAndCreateCommit',
                    { signature: signature_string, func: 'UpdatePermission' }
                );
                if (response.error) {
                    return alert(`error :${response.result}`);
                }

                result = response.result;
                signature_string = sign(privateKey, response.commitDigest);
                response = await ajaxAwait('/leaseSystem/commitSend', {
                    signature: signature_string,
                    func: 'UpdatePermission'
                });
                if (response.error) {
                    return alert(`error: ${response.result}`);
                }

                if (alert(`${result}`)) {
                    window.location.reload();
                }
                window.location.reload();
            })

        }

        async function main() {
            let accounts = await web3.eth.getAccounts();
            account = accounts[0];
            identityManagerABI = await fetch(
                '../../contracts/IdentityManager.json'
            );
            personalIdentityABI = await fetch(
                '../../contracts/PersonalIdentity.json'
            );
            identityManagerABI = await identityManagerABI.json();
            identityManagerABI = identityManagerABI.output.abi;
            personalIdentityABI = await personalIdentityABI.json();
            personalIdentityABI = personalIdentityABI.output.abi;

            // console.log('identityManagerABI = ' + JSON.stringify(identityManagerABI));
            // console.log('personalIdentityABI = ' + JSON.stringify(personalIdentityABI));

            buildListener();
        }

        main();

    </script>
    <%- include('../partials/footer'); %>